@model BrewHow.ViewModels.RecipeEditViewModel

@{
    ViewBag.Title = "Edit";
}

<article id="recipe-edit">
<header>
    <h2>
    <a href="#" 
    data-role="button" 
    data-icon="back" 
    data-iconpos="notext" 
    data-inline="true"
    onclick="javascript:history.go(-1)">Back</a>
Edit: @Model.Name</h2>
</header>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

        <div class="fieldcontain">
            @Html.LabelFor(model => model.Name)
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        <div class="fieldcontain">
            @Html.LabelFor(model => model.StyleId)
            @Html.DropDownListFor(model => model.StyleId, Model.StyleList)
        </div>
        <div class="fieldcontain">            
            @Html.LabelFor(model => model.OriginalGravity)
            @Html.EditorFor(model => model.OriginalGravity)
            @Html.ValidationMessageFor(model => model.OriginalGravity)
        </div>
        <div class="fieldcontain">
            @Html.LabelFor(model => model.FinalGravity)
            @Html.EditorFor(model => model.FinalGravity)
            @Html.ValidationMessageFor(model => model.FinalGravity)
        </div>
        <div class="fieldcontain">
            @Html.LabelFor(model => model.GrainBill)
            @Html.EditorFor(model => model.GrainBill)
            @Html.ValidationMessageFor(model => model.GrainBill)
        </div>
        <div class="fieldcontain">
            @Html.LabelFor(model => model.Instructions)
            @Html.EditorFor(model => model.Instructions)
            @Html.ValidationMessageFor(model => model.Instructions)
        </div>
        <p>
            <input type="submit" value="Save"/>
        </p>
    @Html.HiddenFor(model => model.RecipeId)
    @Html.HiddenFor(model => Model.Slug)
}
</article>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
